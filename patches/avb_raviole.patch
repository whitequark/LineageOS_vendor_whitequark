
project build/make/
diff --git a/core/Makefile b/core/Makefile
index c19b0754af..e25d382062 100644
--- a/core/Makefile
+++ b/core/Makefile
@@ -4357,16 +4357,19 @@ endef
 # $(1): Partition name, e.g. boot or system.
 define check-and-set-avb-args
 $(eval _in_chained_vbmeta := $(filter $(1),$(INTERNAL_AVB_PARTITIONS_IN_CHAINED_VBMETA_IMAGES)))
-$(if $(BOARD_AVB_$(call to-upper,$(1))_KEY_PATH),\
-    $(if $(_in_chained_vbmeta),\
-        $(error Chaining partition "$(1)" in chained VBMeta image is not supported)) \
-    $(call _check-and-set-avb-chain-args,$(1)),\
-    $(if $(_in_chained_vbmeta),,\
-        $(if $(filter boot,$(1)),\
-            $(eval INTERNAL_AVB_MAKE_VBMETA_IMAGE_ARGS += \
-                --include_descriptors_from_image $(firstword $(call images-for-partitions,$(1)))),\
-            $(eval INTERNAL_AVB_MAKE_VBMETA_IMAGE_ARGS += \
-                --include_descriptors_from_image $(call images-for-partitions,$(1))))))
+$(eval _partition_path := $(call images-for-partitions,$(1)))
+$(if $(_partition_path),\
+    $(if $(BOARD_AVB_$(call to-upper,$(1))_KEY_PATH),\
+        $(if $(_in_chained_vbmeta),\
+            $(error Chaining partition "$(1)" in chained VBMeta image is not supported)) \
+        $(call _check-and-set-avb-chain-args,$(1)),\
+        $(if $(_in_chained_vbmeta),,\
+            $(if $(filter boot,$(1)),\
+                $(eval INTERNAL_AVB_MAKE_VBMETA_IMAGE_ARGS += \
+                    --include_descriptors_from_image $(firstword $(_partition_path))),\
+                $(eval INTERNAL_AVB_MAKE_VBMETA_IMAGE_ARGS += \
+                    --include_descriptors_from_image $(_partition_path))))),\
+    $(info Partition path for "$(1)" not yet defined, not adding it to vbmeta))
 endef

 # Checks and sets build variables for a custom chained partition to include it into vbmeta.img.
@@ -6110,6 +6113,11 @@ endif # BOARD_CUSTOMIMAGES_PARTITION_LIST
 	    echo $(part) >> $(zip_root)/META/pack_radioimages.txt;)
 	@# Run fs_config on all the system, vendor, boot ramdisk,
 	@# and recovery ramdisk files in the zip, and save the output
+ifdef BOARD_PREBUILT_IMAGES
+ @# Copy any other prebuilt images in to the IMAGES directory for packaging.
+ $(hide) mkdir -p $(zip_root)/IMAGES
+ @$(foreach image,$(BOARD_PREBUILT_IMAGES), cp $(BOARD_PREBUILT_IMAGES_PATH)/$(image).img $(zip_root)/IMAGES/$(image).img;)
+endif
 ifdef BUILDING_SYSTEM_IMAGE
 	$(hide) $(call fs_config,$(zip_root)/SYSTEM,system/) > $(zip_root)/META/filesystem_config.txt
 endif

project device/google/gs101/
diff --git a/BoardConfigLineage.mk b/BoardConfigLineage.mk
index bfe3ae06..4fbba9ea 100644
--- a/BoardConfigLineage.mk
+++ b/BoardConfigLineage.mk
@@ -35,7 +35,7 @@ TARGET_COPY_OUT_VENDOR_DLKM := vendor_dlkm

 # Enable chain partition for vendor.
 BOARD_AVB_VBMETA_VENDOR := vendor
-BOARD_AVB_VBMETA_VENDOR_KEY_PATH := external/avb/test/data/testkey_rsa2048.pem
+BOARD_AVB_VBMETA_VENDOR_KEY_PATH := vendor/extra/security/verifiedboot.key
 BOARD_AVB_VBMETA_VENDOR_ALGORITHM := SHA256_RSA2048
 BOARD_AVB_VBMETA_VENDOR_ROLLBACK_INDEX := $(PLATFORM_SECURITY_PATCH_TIMESTAMP)
 BOARD_AVB_VBMETA_VENDOR_ROLLBACK_INDEX_LOCATION := 3
@@ -52,6 +52,3 @@ BOARD_SYSTEMIMAGE_PARTITION_RESERVED_SIZE := 1752350720
 BOARD_SYSTEM_EXTIMAGE_EXTFS_INODE_COUNT := -1
 BOARD_SYSTEM_EXTIMAGE_PARTITION_RESERVED_SIZE := 92160000
 endif
-
-# Verified Boot
-BOARD_AVB_MAKE_VBMETA_IMAGE_ARGS += --flags 3

project device/google/raviole/
diff --git a/BoardConfigLineage.mk b/BoardConfigLineage.mk
index cfa0ee9..b71bb6f 100644
--- a/BoardConfigLineage.mk
+++ b/BoardConfigLineage.mk
@@ -43,3 +43,6 @@ TARGET_KERNEL_EXT_MODULES := \
     uwb/kernel \
     video/gchips \
     wlan/bcmdhd4389
+
+BOARD_AVB_KEY_PATH := vendor/extra/security/verifiedboot.key
+BOARD_AVB_ALGORITHM := SHA256_RSA2048
